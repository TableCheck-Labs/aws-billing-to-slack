service: aws-billing-to-slack

plugins:
  - serverless-python-requirements
provider:
  name: aws
  # Sane defaults, easy for multi-account/multi-region organizations
  profile: ${opt:aws_profile, env:AWS_PROFILE, 'default'}
  region: ${opt:aws_region, env:AWS_REGION, env:AWS_DEFAULT_REGION, 'us-east-1'}
  runtime: python3.7

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ce:GetCostAndUsage"
      Resource: "*"
    # Needed to get account alias
    - Effect: "Allow"
      Action:
        - "iam:ListAccountAliases"
      Resource: "*"

functions:
  report_cost:
    handler: handler.report_cost

    description: Send account daily billing data to Slack channel

    # Keep costs minimal
    memorySize: 128
    timeout: 10

    events:
      # Every day at 08:16 UTC / 17:16 CDT
      - schedule: cron(16 8 * * ? *)

    environment:
      SLACK_WEBHOOK_URL: ${opt:slack_url, env:slack_url}
      AWS_ACCOUNT_NAME: ${env:custom_aws_account_name, opt:aws_account, env:AWS_PROFILE, 'default'}
      CREDITS_EXPIRE_DATE: ${opt:credits_expire_date, env:credits_expire_date}
      CREDITS_REMAINING_AS_OF: ${opt:credits_remaining_date, env:credits_expire_date}
      CREDITS_REMAINING: ${opt:credits_remaining, env:credits_remaining}
